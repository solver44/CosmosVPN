#!/usr/bin/bash
# Helper function to output the configuration
function outputConfig() {
        CLIENT=$1
        PASS=$2
        PASSWORD=$3

        if [[ $PASS == 'yes' ]]; then
                echo "$PASSWORD"
        fi

        echo "<ca>"
        cat "/etc/openvpn/easy-rsa/pki/ca.crt"
        echo "</ca>"

        echo "<cert>"
        awk '/BEGIN/,/END CERTIFICATE/' "/etc/openvpn/easy-rsa/pki/issued/$CLIENT.crt"
        echo "</cert>"

        echo "<key>"
        cat "/etc/openvpn/easy-rsa/pki/private/$CLIENT.key"
        echo "</key>"

        if grep -qs "^tls-crypt" /etc/openvpn/server.conf; then
                echo "<tls-crypt>"
                cat /etc/openvpn/tls-crypt.key
                echo "</tls-crypt>"
        elif grep -qs "^tls-auth" /etc/openvpn/server.conf; then
                echo "key-direction 1"
                echo "<tls-auth>"
                cat /etc/openvpn/tls-auth.key
                echo "</tls-auth>"
        fi
}

# newClient1 function
function newClient1() {
        CLIENT=$1
        PASS=$2
        PASSWORD=$(openssl rand -base64 16)

        CLIENTEXISTS=$(tail -n +2 /etc/openvpn/easy-rsa/pki/index.txt | grep -c -E "/CN=$CLIENT\$")
        if [[ $CLIENTEXISTS == '1' ]]; then
                echo "User already exists"
                PASSWORD=$(grep -E "^${CLIENT}:" /etc/openvpn/credentials.txt | cut -d: -f2)
                outputConfig "$CLIENT" "$PASS" "$PASSWORD"
                exit
        else
                cd /etc/openvpn/easy-rsa/ || return
                if [[ $PASS == 'no' ]]; then
                        ./easyrsa --batch build-client-full "$CLIENT" nopass >/dev/null
                else
                        expect -c "
            set CLIENT \"$CLIENT\"
            set PASSWORD \"$PASSWORD\"

            spawn ./easyrsa build-client-full \$CLIENT

            expect \"Enter PEM pass phrase:\"
            send \"\$PASSWORD\r\"

            expect \"Verifying - Enter PEM pass phrase:\"
            send \"\$PASSWORD\r\"

            expect \"Confirm request details:\"
            send \"yes\r\"

            expect eof
            "
                fi
        fi

        outputConfig "$CLIENT" "$PASS" "$PASSWORD"
        if [[ $PASS == 'yes' ]]; then
            echo "${CLIENT}:${PASSWORD}" >>/etc/openvpn/credentials.txt
        fi
}

function newClient() {
        CLIENTEXISTS=$(tail -n +2 /etc/openvpn/easy-rsa/pki/index.txt | grep -c -E "/CN=$1\$")
        if [[ $CLIENTEXISTS == '1' ]]; then
                echo "false"
                exit
        else
                cd /etc/openvpn/easy-rsa/ || return
                echo yes | ./easyrsa build-client-full "$1" nopass >/dev/null
        fi

        echo "<ca>"
        cat "/etc/openvpn/easy-rsa/pki/ca.crt"
        echo "</ca>"
        echo "<cert>"
        awk '/BEGIN/,/END/' "/etc/openvpn/easy-rsa/pki/issued/$1.crt"
        echo "</cert>"
        echo "<key>"
        cat "/etc/openvpn/easy-rsa/pki/private/$1.key"
        echo "</key>"
        echo "<tls-crypt>"
        cat /etc/openvpn/tls-crypt.key
        echo "</tls-crypt>"
        exit 0
}

# Call the newClient1 function with the provided arguments
newClient1 "$1" "$2"
